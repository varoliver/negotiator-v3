// Generated by delombok at Wed May 04 16:43:34 CEST 2022
package eu.bbmri.eric.csit.service.model;

import com.sun.istack.NotNull;

import javax.persistence.*;
import java.util.Set;

@Entity
@Table(name = "person")
public class Person extends BaseEntity {

    private enum UserType {
        INTERNAL, EXTERNAL
    }

    @ManyToMany
    @JoinTable(name = "person_biobank_link", joinColumns = @JoinColumn(name = "biobank_id"), inverseJoinColumns = @JoinColumn(name = "person_id"))
    Set<Biobank> biobanks;

    @ManyToMany
    @JoinTable(name = "person_collection_link", joinColumns = @JoinColumn(name = "collection_id"), inverseJoinColumns = @JoinColumn(name = "person_id"))
    Set<Collection> collections;

    @ManyToMany
    @JoinTable(name = "person_network_link", joinColumns = @JoinColumn(name = "network_id"), inverseJoinColumns = @JoinColumn(name = "person_id"))
    Set<Network> networks;

    @ManyToMany
    @JoinTable(name = "person_project_link", joinColumns = @JoinColumn(name = "project_id"), inverseJoinColumns = @JoinColumn(name = "person_id"))
    Set<Project> projects;

    @Enumerated(EnumType.STRING)
    @NotNull
    private UserType type; // Type of user: local or perun

    @NotNull
    private String authSubject;

    @NotNull
    private String authName;

    @NotNull
    private String authEmail;

    private String password; // can be null if the user is authenticated via OIDC

    private byte[] personImage;

    @NotNull
    private Boolean isAdmin;

    private String organization;

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "Person(type=" + this.getType() + ", authSubject=" + this.getAuthSubject() + ", authName=" + this.getAuthName() + ", authEmail="
                + this.getAuthEmail() + ", password=" + this.getPassword() + ", personImage=" + java.util.Arrays.toString(this.getPersonImage()) + ", isAdmin="
                + this.getIsAdmin() + ", organization=" + this.getOrganization() + ")";
    }

    @java.lang.SuppressWarnings("all")
    public Person() {
    }

    @java.lang.SuppressWarnings("all")
    public Person(final Set<Biobank> biobanks, final Set<Collection> collections, final Set<Network> networks, final Set<Project> projects, final UserType type,
            final String authSubject, final String authName, final String authEmail, final String password, final byte[] personImage, final Boolean isAdmin,
            final String organization) {
        this.biobanks = biobanks;
        this.collections = collections;
        this.networks = networks;
        this.projects = projects;
        this.type = type;
        this.authSubject = authSubject;
        this.authName = authName;
        this.authEmail = authEmail;
        this.password = password;
        this.personImage = personImage;
        this.isAdmin = isAdmin;
        this.organization = organization;
    }

    @java.lang.SuppressWarnings("all")
    public Set<Biobank> getBiobanks() {
        return this.biobanks;
    }

    @java.lang.SuppressWarnings("all")
    public Set<Collection> getCollections() {
        return this.collections;
    }

    @java.lang.SuppressWarnings("all")
    public Set<Network> getNetworks() {
        return this.networks;
    }

    @java.lang.SuppressWarnings("all")
    public Set<Project> getProjects() {
        return this.projects;
    }

    @java.lang.SuppressWarnings("all")
    public UserType getType() {
        return this.type;
    }

    @java.lang.SuppressWarnings("all")
    public String getAuthSubject() {
        return this.authSubject;
    }

    @java.lang.SuppressWarnings("all")
    public String getAuthName() {
        return this.authName;
    }

    @java.lang.SuppressWarnings("all")
    public String getAuthEmail() {
        return this.authEmail;
    }

    @java.lang.SuppressWarnings("all")
    public String getPassword() {
        return this.password;
    }

    @java.lang.SuppressWarnings("all")
    public byte[] getPersonImage() {
        return this.personImage;
    }

    @java.lang.SuppressWarnings("all")
    public Boolean getIsAdmin() {
        return this.isAdmin;
    }

    @java.lang.SuppressWarnings("all")
    public String getOrganization() {
        return this.organization;
    }

    @java.lang.SuppressWarnings("all")
    public void setBiobanks(final Set<Biobank> biobanks) {
        this.biobanks = biobanks;
    }

    @java.lang.SuppressWarnings("all")
    public void setCollections(final Set<Collection> collections) {
        this.collections = collections;
    }

    @java.lang.SuppressWarnings("all")
    public void setNetworks(final Set<Network> networks) {
        this.networks = networks;
    }

    @java.lang.SuppressWarnings("all")
    public void setProjects(final Set<Project> projects) {
        this.projects = projects;
    }

    @java.lang.SuppressWarnings("all")
    public void setType(final UserType type) {
        this.type = type;
    }

    @java.lang.SuppressWarnings("all")
    public void setAuthSubject(final String authSubject) {
        this.authSubject = authSubject;
    }

    @java.lang.SuppressWarnings("all")
    public void setAuthName(final String authName) {
        this.authName = authName;
    }

    @java.lang.SuppressWarnings("all")
    public void setAuthEmail(final String authEmail) {
        this.authEmail = authEmail;
    }

    @java.lang.SuppressWarnings("all")
    public void setPassword(final String password) {
        this.password = password;
    }

    @java.lang.SuppressWarnings("all")
    public void setPersonImage(final byte[] personImage) {
        this.personImage = personImage;
    }

    @java.lang.SuppressWarnings("all")
    public void setIsAdmin(final Boolean isAdmin) {
        this.isAdmin = isAdmin;
    }

    @java.lang.SuppressWarnings("all")
    public void setOrganization(final String organization) {
        this.organization = organization;
    }
}
