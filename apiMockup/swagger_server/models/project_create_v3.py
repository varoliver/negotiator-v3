# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
import re  # noqa: F401,E501
from swagger_server import util


class ProjectCreateV3(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, title: str=None, description: str=None, ethics_vote: str=None, expected_end_time: str=None):  # noqa: E501
        """ProjectCreateV3 - a model defined in Swagger

        :param title: The title of this ProjectCreateV3.  # noqa: E501
        :type title: str
        :param description: The description of this ProjectCreateV3.  # noqa: E501
        :type description: str
        :param ethics_vote: The ethics_vote of this ProjectCreateV3.  # noqa: E501
        :type ethics_vote: str
        :param expected_end_time: The expected_end_time of this ProjectCreateV3.  # noqa: E501
        :type expected_end_time: str
        """
        self.swagger_types = {
            'title': str,
            'description': str,
            'ethics_vote': str,
            'expected_end_time': str
        }

        self.attribute_map = {
            'title': 'title',
            'description': 'description',
            'ethics_vote': 'ethicsVote',
            'expected_end_time': 'expectedEndTime'
        }
        self._title = title
        self._description = description
        self._ethics_vote = ethics_vote
        self._expected_end_time = expected_end_time

    @classmethod
    def from_dict(cls, dikt) -> 'ProjectCreateV3':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProjectCreateV3 of this ProjectCreateV3.  # noqa: E501
        :rtype: ProjectCreateV3
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this ProjectCreateV3.


        :return: The title of this ProjectCreateV3.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this ProjectCreateV3.


        :param title: The title of this ProjectCreateV3.
        :type title: str
        """

        self._title = title

    @property
    def description(self) -> str:
        """Gets the description of this ProjectCreateV3.


        :return: The description of this ProjectCreateV3.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this ProjectCreateV3.


        :param description: The description of this ProjectCreateV3.
        :type description: str
        """

        self._description = description

    @property
    def ethics_vote(self) -> str:
        """Gets the ethics_vote of this ProjectCreateV3.


        :return: The ethics_vote of this ProjectCreateV3.
        :rtype: str
        """
        return self._ethics_vote

    @ethics_vote.setter
    def ethics_vote(self, ethics_vote: str):
        """Sets the ethics_vote of this ProjectCreateV3.


        :param ethics_vote: The ethics_vote of this ProjectCreateV3.
        :type ethics_vote: str
        """

        self._ethics_vote = ethics_vote

    @property
    def expected_end_time(self) -> str:
        """Gets the expected_end_time of this ProjectCreateV3.

        date/time when project will probably end  # noqa: E501

        :return: The expected_end_time of this ProjectCreateV3.
        :rtype: str
        """
        return self._expected_end_time

    @expected_end_time.setter
    def expected_end_time(self, expected_end_time: str):
        """Sets the expected_end_time of this ProjectCreateV3.

        date/time when project will probably end  # noqa: E501

        :param expected_end_time: The expected_end_time of this ProjectCreateV3.
        :type expected_end_time: str
        """

        self._expected_end_time = expected_end_time
