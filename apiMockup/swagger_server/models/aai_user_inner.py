# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AAIUserInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, organization: str=None, id: int=None, display_name: str=None, status: str=None, mail: str=None, identities: List[str]=None):  # noqa: E501
        """AAIUserInner - a model defined in Swagger

        :param organization: The organization of this AAIUserInner.  # noqa: E501
        :type organization: str
        :param id: The id of this AAIUserInner.  # noqa: E501
        :type id: int
        :param display_name: The display_name of this AAIUserInner.  # noqa: E501
        :type display_name: str
        :param status: The status of this AAIUserInner.  # noqa: E501
        :type status: str
        :param mail: The mail of this AAIUserInner.  # noqa: E501
        :type mail: str
        :param identities: The identities of this AAIUserInner.  # noqa: E501
        :type identities: List[str]
        """
        self.swagger_types = {
            'organization': str,
            'id': int,
            'display_name': str,
            'status': str,
            'mail': str,
            'identities': List[str]
        }

        self.attribute_map = {
            'organization': 'organization',
            'id': 'id',
            'display_name': 'displayName',
            'status': 'status',
            'mail': 'mail',
            'identities': 'identities'
        }
        self._organization = organization
        self._id = id
        self._display_name = display_name
        self._status = status
        self._mail = mail
        self._identities = identities

    @classmethod
    def from_dict(cls, dikt) -> 'AAIUserInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AAIUser_inner of this AAIUserInner.  # noqa: E501
        :rtype: AAIUserInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def organization(self) -> str:
        """Gets the organization of this AAIUserInner.


        :return: The organization of this AAIUserInner.
        :rtype: str
        """
        return self._organization

    @organization.setter
    def organization(self, organization: str):
        """Sets the organization of this AAIUserInner.


        :param organization: The organization of this AAIUserInner.
        :type organization: str
        """

        self._organization = organization

    @property
    def id(self) -> int:
        """Gets the id of this AAIUserInner.


        :return: The id of this AAIUserInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id: int):
        """Sets the id of this AAIUserInner.


        :param id: The id of this AAIUserInner.
        :type id: int
        """

        self._id = id

    @property
    def display_name(self) -> str:
        """Gets the display_name of this AAIUserInner.


        :return: The display_name of this AAIUserInner.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name: str):
        """Sets the display_name of this AAIUserInner.


        :param display_name: The display_name of this AAIUserInner.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def status(self) -> str:
        """Gets the status of this AAIUserInner.


        :return: The status of this AAIUserInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status: str):
        """Sets the status of this AAIUserInner.


        :param status: The status of this AAIUserInner.
        :type status: str
        """

        self._status = status

    @property
    def mail(self) -> str:
        """Gets the mail of this AAIUserInner.


        :return: The mail of this AAIUserInner.
        :rtype: str
        """
        return self._mail

    @mail.setter
    def mail(self, mail: str):
        """Sets the mail of this AAIUserInner.


        :param mail: The mail of this AAIUserInner.
        :type mail: str
        """

        self._mail = mail

    @property
    def identities(self) -> List[str]:
        """Gets the identities of this AAIUserInner.


        :return: The identities of this AAIUserInner.
        :rtype: List[str]
        """
        return self._identities

    @identities.setter
    def identities(self, identities: List[str]):
        """Sets the identities of this AAIUserInner.


        :param identities: The identities of this AAIUserInner.
        :type identities: List[str]
        """

        self._identities = identities
