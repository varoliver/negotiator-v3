# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AAIUserMappingInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, directory: str=None, id: str=None, members: List[object]=None):  # noqa: E501
        """AAIUserMappingInner - a model defined in Swagger

        :param name: The name of this AAIUserMappingInner.  # noqa: E501
        :type name: str
        :param directory: The directory of this AAIUserMappingInner.  # noqa: E501
        :type directory: str
        :param id: The id of this AAIUserMappingInner.  # noqa: E501
        :type id: str
        :param members: The members of this AAIUserMappingInner.  # noqa: E501
        :type members: List[object]
        """
        self.swagger_types = {
            'name': str,
            'directory': str,
            'id': str,
            'members': List[object]
        }

        self.attribute_map = {
            'name': 'name',
            'directory': 'directory',
            'id': 'id',
            'members': 'members'
        }
        self._name = name
        self._directory = directory
        self._id = id
        self._members = members

    @classmethod
    def from_dict(cls, dikt) -> 'AAIUserMappingInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AAIUserMapping_inner of this AAIUserMappingInner.  # noqa: E501
        :rtype: AAIUserMappingInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this AAIUserMappingInner.


        :return: The name of this AAIUserMappingInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this AAIUserMappingInner.


        :param name: The name of this AAIUserMappingInner.
        :type name: str
        """

        self._name = name

    @property
    def directory(self) -> str:
        """Gets the directory of this AAIUserMappingInner.


        :return: The directory of this AAIUserMappingInner.
        :rtype: str
        """
        return self._directory

    @directory.setter
    def directory(self, directory: str):
        """Sets the directory of this AAIUserMappingInner.


        :param directory: The directory of this AAIUserMappingInner.
        :type directory: str
        """

        self._directory = directory

    @property
    def id(self) -> str:
        """Gets the id of this AAIUserMappingInner.


        :return: The id of this AAIUserMappingInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this AAIUserMappingInner.


        :param id: The id of this AAIUserMappingInner.
        :type id: str
        """

        self._id = id

    @property
    def members(self) -> List[object]:
        """Gets the members of this AAIUserMappingInner.


        :return: The members of this AAIUserMappingInner.
        :rtype: List[object]
        """
        return self._members

    @members.setter
    def members(self, members: List[object]):
        """Sets the members of this AAIUserMappingInner.


        :param members: The members of this AAIUserMappingInner.
        :type members: List[object]
        """

        self._members = members
