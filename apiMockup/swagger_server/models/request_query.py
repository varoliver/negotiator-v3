# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RequestQuery(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, query_parameters: str=None, human_readable: str=None, url: str=None, number_of_collections: int=None):  # noqa: E501
        """RequestQuery - a model defined in Swagger

        :param query_parameters: The query_parameters of this RequestQuery.  # noqa: E501
        :type query_parameters: str
        :param human_readable: The human_readable of this RequestQuery.  # noqa: E501
        :type human_readable: str
        :param url: The url of this RequestQuery.  # noqa: E501
        :type url: str
        :param number_of_collections: The number_of_collections of this RequestQuery.  # noqa: E501
        :type number_of_collections: int
        """
        self.swagger_types = {
            'query_parameters': str,
            'human_readable': str,
            'url': str,
            'number_of_collections': int
        }

        self.attribute_map = {
            'query_parameters': 'queryParameters',
            'human_readable': 'humanReadable',
            'url': 'url',
            'number_of_collections': 'numberOfCollections'
        }
        self._query_parameters = query_parameters
        self._human_readable = human_readable
        self._url = url
        self._number_of_collections = number_of_collections

    @classmethod
    def from_dict(cls, dikt) -> 'RequestQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Request_query of this RequestQuery.  # noqa: E501
        :rtype: RequestQuery
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query_parameters(self) -> str:
        """Gets the query_parameters of this RequestQuery.


        :return: The query_parameters of this RequestQuery.
        :rtype: str
        """
        return self._query_parameters

    @query_parameters.setter
    def query_parameters(self, query_parameters: str):
        """Sets the query_parameters of this RequestQuery.


        :param query_parameters: The query_parameters of this RequestQuery.
        :type query_parameters: str
        """

        self._query_parameters = query_parameters

    @property
    def human_readable(self) -> str:
        """Gets the human_readable of this RequestQuery.

        human readable version of the query  # noqa: E501

        :return: The human_readable of this RequestQuery.
        :rtype: str
        """
        return self._human_readable

    @human_readable.setter
    def human_readable(self, human_readable: str):
        """Sets the human_readable of this RequestQuery.

        human readable version of the query  # noqa: E501

        :param human_readable: The human_readable of this RequestQuery.
        :type human_readable: str
        """

        self._human_readable = human_readable

    @property
    def url(self) -> str:
        """Gets the url of this RequestQuery.

        redirect url to the directory  # noqa: E501

        :return: The url of this RequestQuery.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this RequestQuery.

        redirect url to the directory  # noqa: E501

        :param url: The url of this RequestQuery.
        :type url: str
        """

        self._url = url

    @property
    def number_of_collections(self) -> int:
        """Gets the number_of_collections of this RequestQuery.


        :return: The number_of_collections of this RequestQuery.
        :rtype: int
        """
        return self._number_of_collections

    @number_of_collections.setter
    def number_of_collections(self, number_of_collections: int):
        """Sets the number_of_collections of this RequestQuery.


        :param number_of_collections: The number_of_collections of this RequestQuery.
        :type number_of_collections: int
        """

        self._number_of_collections = number_of_collections
