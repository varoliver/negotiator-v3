# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.query_collections import QueryCollections  # noqa: F401,E501
from swagger_server import util


class Query(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, url: str=None, human_readable: str=None, collections: List[QueryCollections]=None):  # noqa: E501
        """Query - a model defined in Swagger

        :param url: The url of this Query.  # noqa: E501
        :type url: str
        :param human_readable: The human_readable of this Query.  # noqa: E501
        :type human_readable: str
        :param collections: The collections of this Query.  # noqa: E501
        :type collections: List[QueryCollections]
        """
        self.swagger_types = {
            'url': str,
            'human_readable': str,
            'collections': List[QueryCollections]
        }

        self.attribute_map = {
            'url': 'URL',
            'human_readable': 'humanReadable',
            'collections': 'collections'
        }
        self._url = url
        self._human_readable = human_readable
        self._collections = collections

    @classmethod
    def from_dict(cls, dikt) -> 'Query':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Query of this Query.  # noqa: E501
        :rtype: Query
        """
        return util.deserialize_model(dikt, cls)

    @property
    def url(self) -> str:
        """Gets the url of this Query.


        :return: The url of this Query.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this Query.


        :param url: The url of this Query.
        :type url: str
        """

        self._url = url

    @property
    def human_readable(self) -> str:
        """Gets the human_readable of this Query.


        :return: The human_readable of this Query.
        :rtype: str
        """
        return self._human_readable

    @human_readable.setter
    def human_readable(self, human_readable: str):
        """Sets the human_readable of this Query.


        :param human_readable: The human_readable of this Query.
        :type human_readable: str
        """

        self._human_readable = human_readable

    @property
    def collections(self) -> List[QueryCollections]:
        """Gets the collections of this Query.


        :return: The collections of this Query.
        :rtype: List[QueryCollections]
        """
        return self._collections

    @collections.setter
    def collections(self, collections: List[QueryCollections]):
        """Sets the collections of this Query.


        :param collections: The collections of this Query.
        :type collections: List[QueryCollections]
        """

        self._collections = collections
